<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
	xmlns:georss="http://www.georss.org/georss"
	xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
	>

<channel>
	<title>apps Archives | The GitHub Blog</title>
	<atom:link href="https://github.blog/changelog/label/apps/feed/" rel="self" type="application/rss+xml" />
	<link>https://github.blog/changelog/label/apps/</link>
	<description>Updates, ideas, and inspiration from GitHub to help developers build and design software.</description>
	<lastBuildDate>Thu, 27 Apr 2023 18:01:46 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.2.1</generator>

<image>
	<url>https://github.blog/wp-content/uploads/2019/01/cropped-github-favicon-512.png?fit=32%2C32</url>
	<title>apps Archives | The GitHub Blog</title>
	<link>https://github.blog/changelog/label/apps/</link>
	<width>32</width>
	<height>32</height>
</image> 
<site xmlns="com-wordpress:feed-additions:1">153214340</site>	<item>
		<title>GraphQL improvements for fine-grained PATs and GitHub Apps</title>
		<link>https://github.blog/changelog/2023-04-27-graphql-improvements-for-fine-grained-pats-and-github-apps</link>
		
		<dc:creator><![CDATA[Kevin Duck]]></dc:creator>
		<pubDate>Thu, 27 Apr 2023 18:01:46 +0000</pubDate>
				<guid isPermaLink="false">https://github.blog/changelog/2023-04-27-graphql-improvements-for-fine-grained-pats-and-github-apps</guid>

					<description><![CDATA[GraphQL improvements for fine-grained PATs and GitHub Apps]]></description>
										<content:encoded><![CDATA[<p>Fine-grained PATs can now call the <a href="https://docs.github.com/en/graphql">GitHub GraphQL API</a>. This was a limitation at the start of the public beta, and is now supported.</p>
<p>Like with the REST API, the <code>resource owner</code> set for the token must match the owner of the resource being accessed. For example, when you want to look up a specific repository in GraphQL:</p>
<pre><code class="language-graphql">query {
  repository(owner:&quot;octocat&quot;, name:&quot;Hello-World&quot;) {
  ...</code></pre>
<p>The <code>resource owner</code> would need to be <code>octocat</code> to succesfully run the query.</p>
<p>In addition, GitHub Apps now have <code>read</code> access to public resources via GraphQL by default when using user-to-server tokens. This is true even if they are not installed on the organization or user that owns the resource.</p>
<p>This change brings consistency to the access control between REST APIs and GraphQL APIs for GitHub Apps. We made similar changes previously for REST APIs which you can read more about <a href="https://github.blog/changelog/2021-08-02-github-app-user-to-server-rest-api-requests-now-have-read-access-to-public-resources/">here</a>.</p>
<p>To learn more about GraphQL, see <a href="https://docs.github.com/en/graphql/overview/about-the-graphql-api">&quot;About the GraphQL API&quot;</a>. For more details about fine-grained PATs, see <a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token#creating-a-fine-grained-personal-access-token">&quot;Creating a fine-grained personal access token&quot;</a>. And finally, to learn more about GitHub apps, see <a href="https://docs.github.com/en/apps/creating-github-apps/creating-github-apps/setting-permissions-for-github-apps">&quot;Setting permissions for GitHub apps&quot;</a>.</p>
]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">71524</post-id>	</item>
		<item>
		<title>Organization APIs for fine-grained PATs management</title>
		<link>https://github.blog/changelog/2023-03-24-organization-apis-for-fine-grained-pats-management</link>
		
		<dc:creator><![CDATA[Kevin Duck]]></dc:creator>
		<pubDate>Fri, 24 Mar 2023 19:11:06 +0000</pubDate>
				<guid isPermaLink="false">https://github.blog/changelog/2023-03-24-organization-apis-for-fine-grained-pats-management</guid>

					<description><![CDATA[Organization APIs for fine-grained PATs management]]></description>
										<content:encoded><![CDATA[<p>Organization owners can now automate the approval and auditing of fine-grained personal access tokens (PATs) in their organization using a GitHub app. New APIs and webhook events allow a GitHub app to be notified of new PAT requests in an organization, review the request, and then approve or deny the PAT. They also provide a view of all approved fine-grained PATs for an organization, with the ability to revoke their authorization as well. These APIs and events are part of the ongoing fine-grained PAT public beta that <a href="https://github.blog/2022-10-18-introducing-fine-grained-personal-access-tokens-for-github/">launched last year</a>.</p>
<p><img decoding="async" src="https://i0.wp.com/user-images.githubusercontent.com/1666363/227591227-7d5d739e-72ef-4990-bfdf-ee7cd9423c23.png?ssl=1" alt="Mermaid diagram indicating how a request from a user triggers a webhook event to an app, who can then review the request and choose to approve it. Later, the application can review all approved PATs, and choose to revoke one, resulting in an email notification to the user who created the PAT." data-recalc-dims="1"></p>
<p>Details included in the webhook event and API listings include the repositories and permissions requested, the expiration time of the token, and the user&#039;s explanation for what they plan to do with the PAT. The <code>personal_access_token_request</code> events are generated when a request is created, approved or denied by an administrator or application, or cancelled by the requesting user.</p>
<p>Only a GitHub app is able to call these APIs, either acting on its own or on behalf of a signed-in organization administrator.<br />
The <code>organization_personal_access_tokens</code> permission is needed to manage the active tokens, while the <code>organization_personal_access_token_requests</code> permission enables the app to recieve webhooks about requests and call the request management APIs.</p>
<p>Organizations must have the personal access token approval flow enabled in order to manage these requests, otherwise fine-grained personal access tokens are automatically approved for the organization (which generates a <code>personal_access_token_request: approved</code> event).</p>
<p>To learn more about these APIs, see <a href="https://docs.github.com/en/rest/orgs/orgs?apiVersion=2022-11-28#list-requests-to-access-organization-resources-with-fine-grained-personal-access-tokens">&quot;List requests to access organization resources with fine-grained PATs&quot;</a> and the <a href="https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads?actionType=approved#personal_access_token_request">&quot;<code>personal_access_token_request</code> webhook event&quot;</a>. To learn more about fine-grained PATs, and how to enable them for your organization, see <a href="https://docs.github.com/en/organizations/managing-programmatic-access-to-your-organization/setting-a-personal-access-token-policy-for-your-organization">&quot;Setting a personal access token policy for your organization&quot;</a>.</p>
<p>If you have feedback or bugs to report about fine-grained PATs, please let us know in the <a href="https://github.com/community/community/discussions/36441">dedicated feedback discussion</a>.</p>
]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">70932</post-id>	</item>
		<item>
		<title>SSH Certificate requirement update</title>
		<link>https://github.blog/changelog/2023-03-16-ssh-certificate-requirement-update</link>
		
		<dc:creator><![CDATA[Kevin Duck]]></dc:creator>
		<pubDate>Thu, 16 Mar 2023 17:58:39 +0000</pubDate>
				<guid isPermaLink="false">https://github.blog/changelog/2023-03-16-ssh-certificate-requirement-update</guid>

					<description><![CDATA[SSH Certificate requirement update]]></description>
										<content:encoded><![CDATA[<p>The &quot;Require SSH certificates&quot; policy now allows GitHub apps to call Git APIs using a user-to-server token, bringing them up to parity with OAuth app support.</p>
<p>The SSH certificate requirement mandates that users in your organization call Git APIs using an SSH certificate issued by your organization, in place of their own SSH key or a PAT.<br />
To support automation, it has an exception in place for OAuth apps and GitHub app server-to-server tokens, which allows applications you&#039;ve approved to call Git APIs for your organization.<br />
With this change, we are extending that exception to GitHub app user-to-server tokens, for when a user has signed into a GitHub app that&#039;s installed in your organization.</p>
<p><img decoding="async" src="https://i0.wp.com/user-images.githubusercontent.com/1666363/225112716-0e0c0c73-ce3b-4b49-a1fe-46fdb9395a39.png?ssl=1" alt="Screenshot of the SSH Certificate requirement checkbox" data-recalc-dims="1"></p>
<p>This change also applies when the enterprise-level setting requires SSH certificates across all organizations in the enterprise.</p>
<p>To learn more, see <a href="https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-git-access-to-your-organizations-repositories/managing-your-organizations-ssh-certificate-authorities#adding-an-ssh-certificate-authority">&quot;Managing your organization&#039;s SSH certificate authorities&quot;</a> or <a href="https://docs.github.com/en/enterprise-cloud@latest/admin/policies/enforcing-policies-for-your-enterprise/enforcing-policies-for-security-settings-in-your-enterprise#managing-ssh-certificate-authorities-for-your-enterprise">&quot;Managing SSH certificate authorities for your enterprise&quot;</a>.</p>
]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">70774</post-id>	</item>
		<item>
		<title>API for reverting a pull request</title>
		<link>https://github.blog/changelog/2023-01-27-api-for-reverting-a-pull-request</link>
		
		<dc:creator><![CDATA[Kevin Duck]]></dc:creator>
		<pubDate>Fri, 27 Jan 2023 17:41:00 +0000</pubDate>
				<guid isPermaLink="false">https://github.blog/changelog/2023-01-27-api-for-reverting-a-pull-request</guid>

					<description><![CDATA[API for reverting a pull request]]></description>
										<content:encoded><![CDATA[<p>A GraphQL mutation is now available for reverting a merged pull request: <a href="https://docs.github.com/graphql/reference/mutations#revertpullrequest"><strong><code>revertPullRequest</code></strong></a>.</p>
<p>Like the revert action on the pull request page in the web, calling this API creates a new pull request that reverses the changes made by the merged pull request.</p>
<p>Learn more about <a href="https://docs.github.com/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/reverting-a-pull-request">reverting a pull request</a>.</p>
]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">69756</post-id>	</item>
		<item>
		<title>Consistently allow GitHub Apps as exceptions to branch protection rules</title>
		<link>https://github.blog/changelog/2022-05-17-consistently-allow-github-apps-as-exceptions-to-branch-protection-rules</link>
		
		<dc:creator><![CDATA[Sidi Merzouk]]></dc:creator>
		<pubDate>Tue, 17 May 2022 22:07:07 +0000</pubDate>
				<guid isPermaLink="false">https://github.blog/changelog/2022-05-17-consistently-allow-github-apps-as-exceptions-to-branch-protection-rules</guid>

					<description><![CDATA[Consistently allow GitHub Apps as exceptions to branch protection rules]]></description>
										<content:encoded><![CDATA[<p>Previously, some branch protections only allowed exceptions to be granted to users and teams. Now, GitHub Apps can also be granted exceptions to any branch protection that supports exceptions.</p>
<p>Admins can create <a href="https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule">branch protection rules</a> to enforce certain workflows for branches, such as requiring a pull request before changes can be merged to a branch. This is a good practice, but you may want to make exceptions to a rule for specific people, teams, or GitHub Apps. For example, if you have a GitHub App that calls GitHub APIs to make changes in a repository, you may want to permit that App to make changes without creating a pull request. Previously, these exceptions could be granted to people and teams, but only some protections allowed GitHub Apps.</p>
<p>Now, branch protections that previously only allowed exceptions for people and teams also support GitHub Apps. When admins configure these branch protections, they can choose from a list of GitHub Apps that are installed and authorized for the repository, as shown here:</p>
<p><img decoding="async" src="https://i0.wp.com/user-images.githubusercontent.com/1767415/168915626-eaccb112-d95f-4828-bbfd-317844aa6cda.png?ssl=1" alt="Image of adding a GitHub App as an exception to a branch protection setting" data-recalc-dims="1"></p>
<p>For information about branch protection rules, visit <a href="https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule">Managing a branch protection rule</a>.</p>
<p>For information about GitHub Apps, visit <a href="https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps">About GitHub Apps</a>.</p>
<p>We appreciate feedback on this and other topics in GitHub&#039;s <a href="https://github.com/github/feedback/discussions/">public feedback discussions</a>.</p>
]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">65010</post-id>	</item>
		<item>
		<title>Enable OAuth Device Authentication Flow for Apps</title>
		<link>https://github.blog/changelog/2022-03-16-enable-oauth-device-authentication-flow-for-apps</link>
		
		<dc:creator><![CDATA[Sidi Merzouk]]></dc:creator>
		<pubDate>Thu, 17 Mar 2022 04:40:59 +0000</pubDate>
				<guid isPermaLink="false">https://github.blog/changelog/2022-03-16-enable-oauth-device-authentication-flow-for-apps</guid>

					<description><![CDATA[Enable OAuth Device Authentication Flow for Apps]]></description>
										<content:encoded><![CDATA[<p>From today the OAuth Device Authorization flow feature must be manually enabled for all OAuth and GitHub Apps. This change reduces the likelihood of Apps being used in phishing attacks against GitHub users by ensuring integrators are aware of the risks and make a conscious choice to support this form of authentication.</p>
<p>If you own or manage an OAuth App or GitHub App that makes use of the OAuth Device Authorization flow, you can enable it for your App via its settings page:</p>
<p><img decoding="async" src="https://i0.wp.com/user-images.githubusercontent.com/75904/155462918-d25c97b8-fe9d-4188-839f-5359c2a85f9f.png?ssl=1" alt="Enable device flow" data-recalc-dims="1"></p>
<p>The OAuth Device Authorization flow API endpoints will respond with status code 400 to Apps that have not enabled this feature.</p>
<p><a href="https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps#device-flow">Learn more about the OAuth Device Authorization flow.</a></p>
]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">63689</post-id>	</item>
		<item>
		<title>Opt in needed to keep OAuth Device Authorization Flow working</title>
		<link>https://github.blog/changelog/2022-03-02-opt-in-needed-to-keep-oauth-device-authorization-flow-working</link>
		
		<dc:creator><![CDATA[Sidi Merzouk]]></dc:creator>
		<pubDate>Wed, 02 Mar 2022 22:56:09 +0000</pubDate>
				<guid isPermaLink="false">https://github.blog/changelog/2022-03-02-opt-in-needed-to-keep-oauth-device-authorization-flow-working</guid>

					<description><![CDATA[Opt in needed to keep OAuth Device Authorization Flow working]]></description>
										<content:encoded><![CDATA[<p>On March 16 2022 the OAuth Device Authorization flow will become an &quot;opt in&quot; feature for all OAuth and GitHub Apps. This change reduces the likelihood of Apps being used in phishing attacks against GitHub users.</p>
<p>If you own or manage an OAuth App or GitHub App that makes use of the OAuth Device Authorization flow, you should enable it for your Apps via its settings page:</p>
<p><img decoding="async" src="https://i0.wp.com/user-images.githubusercontent.com/75904/155462918-d25c97b8-fe9d-4188-839f-5359c2a85f9f.png?ssl=1" alt="Enable device flow" data-recalc-dims="1"></p>
<p>The OAuth Device Authorization flow API endpoints will respond with status code 400 to Apps that have not opted in to this feature.</p>
<p><a href="https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps#device-flow">Learn more about the OAuth Device Authorization flow.</a></p>
]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">63535</post-id>	</item>
		<item>
		<title>A simpler API for authoring commits</title>
		<link>https://github.blog/changelog/2021-09-13-a-simpler-api-for-authoring-commits</link>
		
		<dc:creator><![CDATA[phanatic]]></dc:creator>
		<pubDate>Mon, 13 Sep 2021 14:23:35 +0000</pubDate>
				<guid isPermaLink="false">https://github.blog/changelog/2021-09-13-a-simpler-api-for-authoring-commits</guid>

					<description><![CDATA[A simpler API for authoring commits]]></description>
										<content:encoded><![CDATA[<p>The new GraphQL mutation <a href="https://docs.github.com/en/graphql/reference/mutations#createcommitonbranch"><code>createCommitOnBranch</code></a> makes it easier to add, update, and delete files in a branch of a repository.</p>
<p>This new API offers a simpler way to commit changes compared to the existing <a href="https://docs.github.com/en/rest/reference/git">Git database REST APIs</a>. With the new <code>createCommitOnBranch</code> mutation, you do not need to manually create blobs and trees before creating the commit. This allows you to add, update, or delete multiple files in a single API call.</p>
<p>Commits authored using the new API are automatically GPG signed and are <a href="https://docs.github.com/en/github/authenticating-to-github/managing-commit-signature-verification/about-commit-signature-verification">marked as verified</a> in the GitHub UI. GitHub Apps can use the mutation to author commits directly or <a href="https://docs.github.com/en/developers/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests">on behalf of users</a>.</p>
<div style="width: 1716px;" class="wp-video"><!--[if lt IE 9]><script>document.createElement('video');</script><![endif]-->
<video class="wp-video-shortcode js-viewport-aware-video" id="video-60183-1" width="1716" height="1466" autoplay="1" preload="metadata" controls="controls" playsinline="1" muted="1"><source type="video/mp4" src="https://github.blog/wp-content/uploads/2021/09/API-commit-authoring.mp4?_=1" /><a href="https://github.blog/wp-content/uploads/2021/09/API-commit-authoring.mp4">https://github.blog/wp-content/uploads/2021/09/API-commit-authoring.mp4</a></video></div>
<hr />
<p>See the <a href="https://docs.github.com/en/graphql/reference/mutations#createcommitonbranch">GraphQL API reference</a> for more information on using <code>createCommitOnBranch</code>. You can also try it in the <a href="https://docs.github.com/en/graphql/overview/explorer">GraphQL API Explorer</a>! If you need a refresher on how to use the GraphQL API, see our <a href="https://docs.github.com/en/graphql/guides">guide</a>.</p>
]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">60183</post-id>	</item>
		<item>
		<title>GitHub App user-to-server REST API requests now have read access to public resources</title>
		<link>https://github.blog/changelog/2021-08-02-github-app-user-to-server-rest-api-requests-now-have-read-access-to-public-resources</link>
		
		<dc:creator><![CDATA[phanatic]]></dc:creator>
		<pubDate>Mon, 02 Aug 2021 16:21:56 +0000</pubDate>
				<guid isPermaLink="false">https://github.blog/changelog/2021-08-02-github-app-user-to-server-rest-api-requests-now-have-read-access-to-public-resources</guid>

					<description><![CDATA[GitHub App user-to-server REST API requests now have read access to public resources]]></description>
										<content:encoded><![CDATA[<p>API requests made by a GitHub App on behalf of a user that has authorized the app are known as <em>user-to-server requests</em>.</p>
<p>The resources that can be accessed by these requests are constrained to the set of <em>private</em> resources that <em>both</em> the App and the authorizing user can access.</p>
<p>GitHub is now extending this access model, allowing user-to-server requests to also read public resources over <a href="https://docs.github.com/en/rest/reference">the REST API</a>. This includes, for example, the ability to list a public repository&#039;s <a href="https://docs.github.com/rest/reference/issues#list-repository-issues">issues</a> and <a href="https://docs.github.com/rest/reference/pulls#list-pull-requests">pull requests</a>, and to access a public repository&#039;s <a href="https://docs.github.com/rest/reference/issues#list-issue-comments-for-a-repository">comments</a> and <a href="https://docs.github.com/rest/reference/repos#get-repository-content">content</a>.</p>
<p>Read more about <a href="https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/authorizing-github-apps">authorizing GitHub Apps</a>.</p>
]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">59194</post-id>	</item>
		<item>
		<title>Installation access token creation requests now respect IP allow list settings</title>
		<link>https://github.blog/changelog/2021-06-07-installation-access-token-creation-requests-now-respect-ip-allow-list-settings</link>
		
		<dc:creator><![CDATA[phanatic]]></dc:creator>
		<pubDate>Mon, 07 Jun 2021 16:27:36 +0000</pubDate>
				<guid isPermaLink="false">https://github.blog/changelog/2021-06-07-installation-access-token-creation-requests-now-respect-ip-allow-list-settings</guid>

					<description><![CDATA[Installation access token creation requests now respect IP allow list settings]]></description>
										<content:encoded><![CDATA[<p>If your organization uses <a href="https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-allowed-ip-addresses-for-your-organization">IP allow lists</a> to restrict access, any API requests made with an installation access token for a GitHub App installed on your organization already respects those settings.</p>
<p>GitHub is extending this so that the API request to <a href="https://docs.github.com/en/rest/reference/apps#create-an-installation-access-token-for-an-app">create the installation access token</a> will also respect your organization&#039;s allowed IP addresses.</p>
]]></content:encoded>
					
		
		
		<post-id xmlns="com-wordpress:feed-additions:1">58560</post-id>	</item>
	</channel>
</rss>
